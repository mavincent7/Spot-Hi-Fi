myApp.addModule.apply(myApp, ["ctrl", {}]) ;myApp.addModule.apply(myApp.ctrl, ["mediatorInputFilter", function(){ 	var m_subscriptionLists; 	var init = function(){		m_subscriptionLists ={};	}; 	init() ; 	var publicInterfaceMediator = { 		addForm : function(formId){			m_subscriptionLists[formId] = {}		}, 		removeForm : function(formId){ 			if (! m_subscriptionLists.hasOwnProperty(formId)){				return false ;			} 			delete m_subscriptionLists[formId];			return true;		},		subscribe : function(formId, inputName, callbackFunction){ 			if (m_subscriptionLists.hasOwnProperty(formId)){				m_subscriptionLists[formId][inputName] = {callback : callbackFunction};			}			else{				throw {					name : "IllegalArgumentException", message : "Catégorie d'événements " + eventCateg + " inconnue du mé diateur"				};			}		},  		publish : function(formId, inputName){ 			if (m_subscriptionLists.hasOwnProperty(formId)){ 				if (m_subscriptionLists[formId].hasOwnProperty(inputName)){					m_subscriptionLists[formId][inputName].callback() ;				}			}			else{				throw{					name : "IllegalArgumentException", message : "Formulaire d' ID " + formId + " inconnu du médiateur"				};			}		}, 		empty : function(){			init();		}	};	return publicInterfaceMediator ;}() ]) ;